

public class LongestSubstringWithKUniqueCharacters {

	public static void main(String[] args) {
		String str= "aabacbebebe";
		int k=3;
		int i=0,j=0;
		int maxSize= Integer.MIN_VALUE;
		HashMap<Character,Integer> map= new HashMap<>();
		while(j<str.length()) {
			if(map.containsKey(str.charAt(j))) {
				int val= map.get(str.charAt(j));
				map.put(str.charAt(j), val+1);
			}
			else {
				map.put(str.charAt(j), 1);
			}
			
			if(map.size()<k) {
				j++;
			}
			else if(map.size()==k) {
				maxSize= Math.max(maxSize, j-i+1);
				j++;
			}
			else if(map.size()>k) {
				while(map.size()>k) {
					int val= map.get(str.charAt(i));
					val--;
					if(val==0) {
						map.remove(str.charAt(i));
					}
					else {
						map.put(str.charAt(i), val); // val is decreased and the added to map
						
					}
					i++;
				}
				j++;
			}
		}
		System.out.println(maxSize);

	}

}
