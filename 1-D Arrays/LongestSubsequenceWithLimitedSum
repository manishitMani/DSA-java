You are given an integer array nums of length n, and an integer array queries of length m.

Return an array answer of length m where answer[i] is the maximum size of a subsequence that you can take from nums such that the sum of its elements is less than or equal to queries[i].

A subsequence is an array that can be derived from another array by deleting some or no elements without changing the order of the remaining elements.

class Solution {
    public int[] answerQueries(int[] nums, int[] queries) {
        int[] answer= new int[queries.length];
        Arrays.sort(nums);
        for(int i=0; i<queries.length; i++){
            int count=0;
            int sum=0;
           int j=0;
           while(j<nums.length){
               sum= sum+ nums[j];
               count++;
               if(sum<= queries[i]){
                   j++;
               }
               else{
                   count= count-1;
                   break;
               }
           }
           answer[i]=count;
        }
        return answer;
    }
}
