// Iterative approach //
class Solution {
    public ListNode reverseList(ListNode head) {
        if(head== null || head.next== null){
            return head;
        }
        ListNode prev= null;
        ListNode curr= head;
        ListNode nxt= head.next;
        while(curr != null){
            curr.next= prev;
            prev= curr;
            curr= nxt;
            if(nxt != null){
            nxt= nxt.next;
            }
        }
        return prev;
    }
}


// Recursive approach

class Solution {
    public ListNode reverseList(ListNode head) {
        if(head== null || head.next== null){
            return head;
        }
        ListNode newHead= reverseList(head.next);
        head.next.next= head;
        // making connection
        head.next= null;
        return newHead;
    }
}