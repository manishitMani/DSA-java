class Solution {
    public int max(int[] arr){
        int max= Integer.MIN_VALUE;
        for(int i=0; i<arr.length; i++){
            if(arr[i]> max){
                max= arr[i];
            }
        }
        return max;
    }

   public int sum(int[] arr){
       int s=0;
       for(int i=0; i<arr.length; i++){
           s= s+ arr[i];
       }
       return s;
   }

   public boolean isValid(int[] arr, int days, int max){
       int d=1;
       int weight=0;
       int i=0;
       while(i< arr.length){
           weight= weight + arr[i];
           if(weight> max){
               d++;
               weight= arr[i];
           }
           i++;
       }
       if(d> days){
           return false;
       }
       return true;

   }
    public int shipWithinDays(int[] weights, int days) {
        int s= max(weights);
        int e= sum(weights);
        int ans= -1;

        if(weights.length< days){
            return -1;
        }

        while(s<=e){
            int m= s+(e-s)/2;
            if(isValid(weights,days,m)==true){
                ans= m;
                e=m-1;
            }
            else{
                s= m+1;
            }
        }
        return ans;
    }
}
