class Solution{
     public static long sum(int[] arr){
         long s=0;
         for(int i=0; i<arr.length;i++){
             s= s+ arr[i];
         }
         return s;
     }
     
     public static boolean isPossible(int[] arr, int n, int k, long m){
         long timeSum=0;
         int c=1;
         for(int i=0; i<n; i++){
             if(arr[i]> m){
                 return false;
             }
             else if(timeSum+arr[i] > m){
                 c++;
                 timeSum=arr[i];
                 if(c>k){
                     return false;
                 }
                  
             }
             else{
                 timeSum= timeSum+ arr[i];
             }
         }
         return true;
     }
    static long minTime(int[] arr,int n,int k){
       
        long ans= -1;
        long s=0;
        long e= sum(arr);
        while(s<=e){
            long m=s+(e-s)/2;
            if(isPossible(arr,n,k,m)){
                ans= m;
                e=m-1;
            }
            else{
                s= m+1;
            }
        }
        
        return ans;
       
    }
}
