  we are give a rotated sorted array arr= [2,5,6,8,11,12,15,18] --> [11,12,15,18,2,5,6,8]--> it is rotated four times
  
  no of times the array is rotated is equal to the index of minimum element
  the minimum element is smaller from its both the neighbour i.e left and right.
  
  OR
  Find Minimum in Rotated Sorted Array ??
  
  class Solution {
    public int findMin(int[] nums) {
        int l =0, len = nums.length, r = len-1;
        int res = nums[l];
        int prev, next;
        while(l<=r){
            //when array is already sorted 
            if(nums[l] <= nums[r]){
                return nums[l];
            }
            
            int mid= l+ (r-l)/2;
            prev = (mid+len-1)%len;
            next = (mid+1)%len;
            
            //mid is less then the prev and the next element
            if(nums[mid]<= nums[prev] && nums[mid] <= nums[next]){
                return nums[mid];
            }
            // the ans will exits in the unsorted region
            else if(nums[mid] >= nums[l]){
                l = mid+1;
            }
            else {
                r= mid-1;
            }
            
        }
        
        return res;
    }
}
  
