class Solution {
    public int max(int[] arr){
        int m= Integer.MIN_VALUE;
        for(int i=0; i<arr.length; i++){
            if(arr[i]> m){
                m= arr[i];
            }
        }
        return m;
    }

    public boolean isValid(int[] arr, int max, int h){
        long hour=0;
         for(int i=0; i<arr.length; i++){
             hour= hour+ (long)Math.ceil(arr[i]*1.0/max);
         }
         if(hour<= h){
             return true;
         }
         return false;
    }

    public int minEatingSpeed(int[] piles, int h) {
        int s=1; int e=max(piles);
        int res=-1;
        while(s<=e){
            int mid= s+(e-s)/2;
            if(isValid(piles,mid,h)==true){
               res= mid;
               e=mid-1;
            }
            else{
                s= mid+1;
            }

        }
        return res;
    }
}
