given a sorted matrix--

 10 20 30 40
 15 25 35 45
 27 29 37 48
 32 33 39 50
 
 key= 29
 worst case time complexity-- O(m+n) i.e the element will be found at mth row and nth col
 
 public class SearchInMatrix {
	
	public static ArrayList<Integer> search(int[][] arr, int key) {
		ArrayList<Integer> list= new ArrayList<Integer>();
		int n= arr.length-1;
		int m= arr[0].length-1;
		int i=0;
		int j=m;
		while(i>=0 && i<n && j>=0 && j<m) {
			if(arr[i][j]== key) {
				list.add(i);
				list.add(j);
				return list;
			}
			else if(arr[i][j]> key) {
				j--;
			}
			else if(arr[i][j]< key) {
				i++;
			}
		}
		return list;
	}

	public static void main(String[] args) {
		int[][] arr= {{10,20,30,40},{15,25,35,45},{27,29,37,48},{32,33,39,50}};
		int key=29;
		System.out.println(search(arr,key));

	}

}
