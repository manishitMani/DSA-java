given array--> [4,6,10] and a key=7
we have to find the element with minimum absolute difference with the key

we perform normal binary serach.. if key is not present then at the end the s and e pointers points to the left and right neighbours of key.. and the min diff with the key is ans.
public class MinDiffElementInSortedArray {
	
	public static int minDiff(int[] arr, int key) {
		int s=0,e=arr.length-1;
		while(s<=e) {
			int m= s+(e-s)/2;
			if(arr[m]== key) {
				return arr[m];
			}
			else if(arr[m]>key) {
				e= m-1;
			}
			else if(arr[m]<key) {
				s= m+1;
			}
		}
		
		if(Math.abs(arr[e]-key) < Math.abs(arr[s]-key)) {
			return arr[e];
		}
		return arr[s];
	}

	public static void main(String[] args) {
		int[] arr= {1,3,8,10,15};
		int key= 13;
		System.out.println(minDiff(arr, key));

	}

}

